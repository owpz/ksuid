name: Go Compatibility

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "src/**"
      - "docs/validation/**"
      - "package*.json"

jobs:
  cross-validation:
    name: Cross-Validation with Go
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Setup Go (no caching)
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: false

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Initialize Go modules and build tools
        run: |
          cd docs/validation
          go mod init validation
          go get github.com/segmentio/ksuid
          go mod tidy
          go build -o generate-vectors generate-interop-vectors.go
          go build -o manual-test manual-test.go
          # Install Go KSUID CLI for cross-validation
          go install github.com/segmentio/ksuid/cmd/ksuid@latest
          # Create symlink for script
          ln -sf $(go env GOPATH)/bin/ksuid ./ksuid-go

      - name: Run Go compatibility tests
        run: npm test -- test/integration/go-compatibility.test.ts test/integration/go-interop.test.ts

      - name: Generate fresh test vectors
        run: |
          cd docs/validation
          ./generate-vectors > fresh-vectors.json

      - name: Validate with Go CLI
        run: |
          chmod +x docs/validation/cross-validate.sh
          # Run from project root with proper paths
          cd docs/validation && KSUID_TS_CLI="node ../../dist/cli.js" ./cross-validate.sh

      - name: Upload validation results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: go-compatibility-results
          path: |
            docs/validation/*.json
            docs/validation/*.log
